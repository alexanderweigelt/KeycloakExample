openapi: 3.0.1
info:
  title: Keycloak Identity and Access Management Example
  version: 0.0.1
servers:
  - url: http://localhost:8080
    description: API Server
paths:
  /api/v1/user:
    get:
      tags:
        - user
      summary: Get a list of users
      operationId: getUsers
      security:
        - keycloakAuthCode: [read]
        - keycloakClientCredentials: [read]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - user
      summary: Create a new user
      operationId: createUser
      security:
        - keycloakAuthCode: [write]
        - keycloakClientCredentials: [write]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /api/v1/user/{id}:
    get:
      tags:
        - user
      summary: Get user by ID
      operationId: getUserById
      security:
        - keycloakAuthCode: [read]
        - keycloakClientCredentials: [read]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - user
      summary: Update user by ID
      operationId: updateUser
      security:
        - keycloakAuthCode: [write]
        - keycloakClientCredentials: [write]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
    delete:
      tags:
        - user
      summary: Delete user by ID
      operationId: deleteUser
      security:
        - keycloakAuthCode: [write]
        - keycloakClientCredentials: [write]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: User deleted
components:
  securitySchemes:
    keycloakAuthCode:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: http://localhost:9090/realms/keycloak-example/protocol/openid-connect/auth
          tokenUrl: http://localhost:9090/realms/keycloak-example/protocol/openid-connect/token
          scopes:
            read: Read access to API
            write: Write access to API
    keycloakClientCredentials:
      type: oauth2
      description: Keycloak Client Credentials
      flows:
        clientCredentials:
          tokenUrl: http://localhost:9090/realms/keycloak-example/protocol/openid-connect/token
          scopes:
            read: Read access to API
            write: Write access to API
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        surname:
          type: string
        name:
          type: string
        birthdate:
          type: string
          format: date
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        street:
          type: string
        city:
          type: string
        zip:
          type: string
        country:
          type: string
